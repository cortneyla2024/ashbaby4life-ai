user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    client_max_body_size 100M;

    # WebDAV server
    server {
        listen 80;
        server_name localhost;
        root /var/www/html;

        # WebDAV configuration
        dav_methods PUT DELETE MKCOL COPY MOVE;
        dav_ext_methods PROPFIND OPTIONS;
        dav_access user:rw group:rw all:r;

        # Create directories if they don't exist
        create_full_put_path on;

        # Autoindex for directory browsing
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;

        # Authentication (basic auth)
        auth_basic "WebDAV Area";
        auth_basic_user_file /etc/nginx/.htpasswd;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=webdav:10m rate=10r/s;
        limit_req zone=webdav burst=20 nodelay;

        # Handle WebDAV requests
        location / {
            limit_req zone=webdav burst=20 nodelay;
            
            # WebDAV methods
            if ($request_method = PUT) {
                dav_methods PUT;
            }
            if ($request_method = DELETE) {
                dav_methods DELETE;
            }
            if ($request_method = MKCOL) {
                dav_methods MKCOL;
            }
            if ($request_method = COPY) {
                dav_methods COPY;
            }
            if ($request_method = MOVE) {
                dav_methods MOVE;
            }
            if ($request_method = PROPFIND) {
                dav_methods PROPFIND;
            }
            if ($request_method = OPTIONS) {
                dav_methods OPTIONS;
            }

            # Default to GET/POST
            try_files $uri $uri/ =404;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}
