apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "steward-omni-max.fullname" . }}-web
  labels:
    {{- include "steward-omni-max.labels" . | nindent 4 }}
    app.kubernetes.io/component: web
spec:
  replicas: {{ .Values.replicaCount.web }}
  selector:
    matchLabels:
      {{- include "steward-omni-max.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: web
  template:
    metadata:
      labels:
        {{- include "steward-omni-max.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: web
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "steward-omni-max.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.security | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-web
          image: "{{ .Values.image.repository }}-web:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: NODE_ENV
              value: {{ .Values.env.NODE_ENV }}
            - name: LOG_LEVEL
              value: {{ .Values.env.LOG_LEVEL }}
            - name: ENABLE_CSP
              value: {{ .Values.env.ENABLE_CSP }}
            - name: PROMETHEUS_ENABLED
              value: {{ .Values.env.PROMETHEUS_ENABLED }}
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.database.user }}:$(DATABASE_PASSWORD)@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}?schema=public"
            - name: REDIS_URL
              value: "redis://{{ .Values.redis.host }}:{{ .Values.redis.port }}"
            - name: OLLAMA_URL
              value: "http://{{ .Values.ollama.host }}:{{ .Values.ollama.port }}"
            - name: NEXTAUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "steward-omni-max.fullname" . }}-secrets
                  key: nextauth-secret
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "steward-omni-max.fullname" . }}-secrets
                  key: database-password
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "steward-omni-max.fullname" . }}-secrets
                  key: redis-password
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "steward-omni-max.fullname" . }}-api
  labels:
    {{- include "steward-omni-max.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  replicas: {{ .Values.replicaCount.api }}
  selector:
    matchLabels:
      {{- include "steward-omni-max.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        {{- include "steward-omni-max.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "steward-omni-max.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.security | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-api
          image: "{{ .Values.image.repository }}-api:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: NODE_ENV
              value: {{ .Values.env.NODE_ENV }}
            - name: LOG_LEVEL
              value: {{ .Values.env.LOG_LEVEL }}
            - name: ENABLE_CSP
              value: {{ .Values.env.ENABLE_CSP }}
            - name: PROMETHEUS_ENABLED
              value: {{ .Values.env.PROMETHEUS_ENABLED }}
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.database.user }}:$(DATABASE_PASSWORD)@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}?schema=public"
            - name: REDIS_URL
              value: "redis://{{ .Values.redis.host }}:{{ .Values.redis.port }}"
            - name: OLLAMA_URL
              value: "http://{{ .Values.ollama.host }}:{{ .Values.ollama.port }}"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "steward-omni-max.fullname" . }}-secrets
                  key: jwt-secret
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "steward-omni-max.fullname" . }}-secrets
                  key: database-password
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "steward-omni-max.fullname" . }}-secrets
                  key: redis-password
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "steward-omni-max.fullname" . }}-broker
  labels:
    {{- include "steward-omni-max.labels" . | nindent 4 }}
    app.kubernetes.io/component: broker
spec:
  replicas: {{ .Values.replicaCount.broker }}
  selector:
    matchLabels:
      {{- include "steward-omni-max.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: broker
  template:
    metadata:
      labels:
        {{- include "steward-omni-max.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: broker
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "steward-omni-max.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.security | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-broker
          image: "{{ .Values.image.repository }}-broker:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: NODE_ENV
              value: {{ .Values.env.NODE_ENV }}
            - name: LOG_LEVEL
              value: {{ .Values.env.LOG_LEVEL }}
            - name: PROMETHEUS_ENABLED
              value: {{ .Values.env.PROMETHEUS_ENABLED }}
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.database.user }}:$(DATABASE_PASSWORD)@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}?schema=public"
            - name: REDIS_URL
              value: "redis://{{ .Values.redis.host }}:{{ .Values.redis.port }}"
            - name: OLLAMA_URL
              value: "http://{{ .Values.ollama.host }}:{{ .Values.ollama.port }}"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "steward-omni-max.fullname" . }}-secrets
                  key: jwt-secret
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "steward-omni-max.fullname" . }}-secrets
                  key: database-password
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "steward-omni-max.fullname" . }}-secrets
                  key: redis-password
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "steward-omni-max.fullname" . }}-docs
  labels:
    {{- include "steward-omni-max.labels" . | nindent 4 }}
    app.kubernetes.io/component: docs
spec:
  replicas: {{ .Values.replicaCount.docs }}
  selector:
    matchLabels:
      {{- include "steward-omni-max.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: docs
  template:
    metadata:
      labels:
        {{- include "steward-omni-max.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: docs
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "steward-omni-max.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.security | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-docs
          image: "{{ .Values.image.repository }}-docs:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
